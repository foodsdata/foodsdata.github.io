<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Hugo Ivy</title>
    <link>https://foodsdata.github.io/</link>
    <description>Recent content in Home on Hugo Ivy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://foodsdata.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>This One Goes to 11!</title>
      <link>https://foodsdata.github.io/posts/news/0.48-relnotes/</link>
      <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.48-relnotes/</guid>
      <description>Hugo 0.48 is built with the brand new Go 1.11. On the technical side this means that Hugo now uses Go Modules for the build. The big new functional thing in Go 1.11 for Hugo is added support for variable overwrites. This means that you can now do this and get the expected result:
{{ $var := &amp;quot;Hugo Page&amp;quot; }} {{ if .IsHome }} {{ $var = &amp;quot;Hugo Home&amp;quot; }} {{ end }} Var is {{ $var }}  The above may look obvious, but has not been possible until now.</description>
    </item>
    
    <item>
      <title>Two Bug Fixes</title>
      <link>https://foodsdata.github.io/posts/news/0.47.1-relnotes/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.47.1-relnotes/</guid>
      <description> This is a bug-fix release with two fixes.  Fixes  Fix .Site.Params case regression fdff0d3a @bep #5094 Do not strip IE conditional statements 5a0ee2b9 @bep #5089  Updates to Linux Snap build  Remove unused files from Git, Perl, etc. 834617f9 @anthonyfok Add nodejs to allow PostCSS to work ef20ec1f @anthonyfok  </description>
    </item>
    
    <item>
      <title>Output Minification, Live-Reload Fixes and More</title>
      <link>https://foodsdata.github.io/posts/news/0.47-relnotes/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.47-relnotes/</guid>
      <description>Hugo 0.47 is named Hugo Reloaded. It adds minification support for the final rendered output (run hugo --minify), but it is mostly a bug fix release. And most notably, it fixes a set of issues with live-reloading/partial rebuilds when running hugo server. Working with bundles should now be a more pleasant experience, to pick one example.
This release represents 35 contributions by 6 contributors to the main Hugo code base.</description>
    </item>
    
    <item>
      <title>The Summer of Hugo</title>
      <link>https://foodsdata.github.io/posts/news/0.46-relnotes/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.46-relnotes/</guid>
      <description>**Hugo 0.46** is the closing credits to **The Summer of Hugo**. While most people have been relaxing on the beach, Hugo has been really busy:   0.42, June 12, 2018: Theme Composition and Inheritance! 0.43, July 9, 2018: Hugo Pipes!  This was followed by some more technical follow-up releases. And today, when July has turned into August, we come with another one. It&amp;rsquo;s not a big release. But with the big interest in Hugo Pipes, we felt that it was important to get this out there sooner rather than later.</description>
    </item>
    
    <item>
      <title>Hugo 0.45.1: Two Bug Fixes</title>
      <link>https://foodsdata.github.io/posts/news/0.45.1-relnotes/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.45.1-relnotes/</guid>
      <description> This is a bug-fix release with a couple of important fixes (and one enhancement).  Enhancements  Add Page.FirstSection 016dd4a6 @bep  Fixes  Fix .Site.GetPage regression 04d4c08d @bep #4989 Fix &amp;ldquo;borrow content from another language&amp;rdquo; issue c6b599a0 @bep #4986  </description>
    </item>
    
    <item>
      <title>Hugo 0.45: Revival of ref, relref and GetPage</title>
      <link>https://foodsdata.github.io/posts/news/0.45-relnotes/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.45-relnotes/</guid>
      <description>Hugo 0.45 is the revival of ref, relref and GetPage. @vassudanagunta and @bep have done some great work improving the API and implementation for the helper functions used to get one page. Before this release, the API was a little bit clumsy and the result potentially ambiguous in some situations.
Now you can simply do:
{{ with .Site.GetPage &amp;quot;/blog/my-post.md&amp;quot; }}{{ .Title }}{{ end }}  Or to get a section page:</description>
    </item>
    
    <item>
      <title>Hugo 0.44: Friday the 13th Edition</title>
      <link>https://foodsdata.github.io/posts/news/0.44-relnotes/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.44-relnotes/</guid>
      <description>Hugo 0.44 is the follow-up release, or The Sequel, of the very well received 0.43 only days ago. That release added Hugo Pipes, with SCSS/SASS support, assets bundling and minification, ad-hoc image processing and much more.
This is mostly a bug-fix release, but it also includes several important improvements.
Many complained that their SVG images vanished when browsed from the hugo server. With Hugo Pipes MIME types suddenly got really important, but Hugo&amp;rsquo;s use of Suffix was ambiguous.</description>
    </item>
    
    <item>
      <title>And Now: Hugo Pipes!</title>
      <link>https://foodsdata.github.io/posts/news/0.43-relnotes/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/0.43-relnotes/</guid>
      <description>Hugo `0.43` adds a powerful and very simple to use **Assets Pipeline** with **SASS and SCSS** with source map support, **PostCSS** and **minification** and **fingerprinting** and **Subresource Integrity** and ... much more. Oh, did we mention that you can now do **ad-hoc image processing** and execute text resources as Go templates?  An example pipeline:
{{ $styles := resources.Get &amp;quot;scss/main.scss&amp;quot; | toCSS | postCSS | minify | fingerprint }} &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ $styles.</description>
    </item>
    
    <item>
      <title>About Hugo Ivy</title>
      <link>https://foodsdata.github.io/about/</link>
      <pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/about/</guid>
      <description>This Hugo theme was ported from Ivy, a minimalist website generator built in Python. I don&amp;rsquo;t have time to document this theme. You have to read the source code to understand what it can do. All I can say for now is that I love it. It is clean, minimal, and responsive.
I hope you will enjoy this theme. The source code is on Github. Happy hacking!</description>
    </item>
    
    <item>
      <title>HTTP/2 Server Push in Hugo</title>
      <link>https://foodsdata.github.io/posts/news/http2-server-push-in-hugo/</link>
      <pubDate>Mon, 24 Jul 2017 18:36:00 +0200</pubDate>
      
      <guid>https://foodsdata.github.io/posts/news/http2-server-push-in-hugo/</guid>
      <description>Netlify recently announced support for HTTP/2 server push, and we have now added it to the gohugo.io sites for the main CSS and JS bundles, along with server-side 301 redirect support.
If you navigate to https://gohugo.io and look in the Chrome developer network console, you should now see Push as the new source (&amp;ldquo;Initiator&amp;rdquo;) for the CSS and JSS:
Setting up this in Hugo was easy:
1. Configure Netlify Output Formats Add a new custom media type and two new output formats to config.</description>
    </item>
    
    <item>
      <title>Another Note on A blogdown Tutorial</title>
      <link>https://foodsdata.github.io/note/2017/06/14/another-note/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/note/2017/06/14/another-note/</guid>
      <description>I just discovered an awesome tutorial on blogdown written by Alison. I have to admit this is the best blogdown tutorial I have seen so far.</description>
    </item>
    
    <item>
      <title>A Quick Note on Two Beautiful Websites</title>
      <link>https://foodsdata.github.io/note/2017/06/13/a-quick-note/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/note/2017/06/13/a-quick-note/</guid>
      <description>To me, the two most impressive websites based on blogdown are:
 Rob J Hyndman&amp;rsquo;s personal website. Live Free or Dichotomize by Lucy and Nick et al.  I&amp;rsquo;m sure there will be more.</description>
    </item>
    
    <item>
      <title>Big Image Sample</title>
      <link>https://foodsdata.github.io/post/2017/03/07/big-image-sample/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2017/03/07/big-image-sample/</guid>
      <description>&lt;p&gt;The image banners at the top of the page are refered to as &amp;ldquo;bigimg&amp;rdquo; in this theme. They are optional, and one more more can be specified. If more than one is specified, the images rotate every 10 seconds. In the front matter, bigimgs are specified using an array of hashes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Sample</title>
      <link>https://foodsdata.github.io/post/2017/03/05/math-sample/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2017/03/05/math-sample/</guid>
      <description>&lt;p&gt;KaTeX can be used to generate complex math formulas server-side.&lt;/p&gt;

&lt;p&gt;$$
\phi = \frac{(1+\sqrt{5})}{2} = 1.6180339887\cdots
$$&lt;/p&gt;

&lt;p&gt;Additional details can be found on &lt;a href=&#34;https://github.com/Khan/KaTeX&#34;&gt;GitHub&lt;/a&gt; or on the &lt;a href=&#34;http://tiddlywiki.com/plugins/tiddlywiki/katex/&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Code Sample</title>
      <link>https://foodsdata.github.io/post/2016/03/08/code-sample/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2016/03/08/code-sample/</guid>
      <description>&lt;p&gt;The following are two code samples using syntax highlighting.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hello hugo</title>
      <link>https://foodsdata.github.io/post/2016/02/20/hello-hugo/</link>
      <pubDate>Sat, 20 Feb 2016 15:34:05 +0800</pubDate>
      
      <guid>https://foodsdata.github.io/post/2016/02/20/hello-hugo/</guid>
      <description>Hello Hugo Balalala&amp;hellip;
Balalala&amp;hellip;
Balalala&amp;hellip;</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>https://foodsdata.github.io/post/2016/02/14/a-plain-markdown-post/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2016/02/14/a-plain-markdown-post/</guid>
      <description>This sample post is mainly for blogdown users. If you do not use blogdown, you can skip the first section.
1. Markdown or R Markdown This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>https://foodsdata.github.io/post/2015/07/23/lorem-ipsum/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/07/23/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Quisque mattis volutpat lorem vitae feugiat.</description>
    </item>
    
    <item>
      <title>Flake it till you make it</title>
      <link>https://foodsdata.github.io/post/2015/02/26/flake-it-till-you-make-it/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/02/26/flake-it-till-you-make-it/</guid>
      <description>Under what circumstances should we step off a path? When is it essential that we finish what we start? If I bought a bag of peanuts and had an allergic reaction, no one would fault me if I threw it out. If I ended a relationship with a woman who hit me, no one would say that I had a commitment problem. But if I walk away from a seemingly secure route because my soul has other ideas, I am a flake?</description>
    </item>
    
    <item>
      <title>Test markdown</title>
      <link>https://foodsdata.github.io/post/2015/02/20/test-markdown/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/02/20/test-markdown/</guid>
      <description>You can write regular markdown here and Jekyll will automatically convert it to a nice webpage. I strongly encourage you to take 5 minutes to learn how to write in markdown - it&amp;rsquo;ll teach you how to transform regular text into bold/italics/headings/tables/etc.
Here is some bold text
Here is a secondary heading Here&amp;rsquo;s a useless table:
   Number Next number Previous number     Five Six Four   Ten Eleven Nine   Seven Eight Six   Two Three One    How about a yummy crepe?</description>
    </item>
    
    <item>
      <title>To be</title>
      <link>https://foodsdata.github.io/post/2015/02/13/to-be/</link>
      <pubDate>Fri, 13 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/02/13/to-be/</guid>
      <description>To be, or not to be&amp;ndash;that is the question: Whether &amp;lsquo;tis nobler in the mind to suffer The slings and arrows of outrageous fortune Or to take arms against a sea of troubles And by opposing end them. To die, to sleep&amp;ndash; No more&amp;ndash;and by a sleep to say we end The heartache, and the thousand natural shocks That flesh is heir to. &amp;lsquo;Tis a consummation Devoutly to be wished. To die, to sleep&amp;ndash; To sleep&amp;ndash;perchance to dream: ay, there&amp;rsquo;s the rub, For in that sleep of death what dreams may come When we have shuffled off this mortal coil, Must give us pause.</description>
    </item>
    
    <item>
      <title>Dear diary</title>
      <link>https://foodsdata.github.io/post/2015/01/27/dear-diary/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/01/27/dear-diary/</guid>
      <description>What is it with that Mary girl? Dragging me to school every day. As if I had a choice. What you don&amp;rsquo;t hear in those nursery rhymes is that she starves me if I don&amp;rsquo;t go to school with her; it&amp;rsquo;s the only way I can stay alive! I&amp;rsquo;m thinking about being adopted by Little Bo Peep, sure I may get lost, but anything is better than being with Mary and those little brats at school (shudder, shudder).</description>
    </item>
    
    <item>
      <title>Soccer</title>
      <link>https://foodsdata.github.io/post/2015/01/19/soccer/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/01/19/soccer/</guid>
      <description>From Wikipedia:
Association football, more commonly known as football or soccer,[2] is a sport played between two teams of eleven players with a spherical ball. It is played by 250 million players in over 200 countries, making it the world&amp;rsquo;s most popular sport.[3][4][5][6] The game is played on a rectangular field with a goal at each end. The object of the game is to score by getting the ball into the opposing goal.</description>
    </item>
    
    <item>
      <title>Pirates arrrr</title>
      <link>https://foodsdata.github.io/post/2015/01/15/pirates-arrrr/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/01/15/pirates-arrrr/</guid>
      <description>Piracy is typically an act of robbery or criminal violence at sea. The term can include acts committed on land, in the air, or in other major bodies of water or on a shore. It does not normally include crimes committed against persons traveling on the same vessel as the perpetrator (e.g. one passenger stealing from others on the same vessel). The term has been used throughout history to refer to raids across land borders by non-state agents.</description>
    </item>
    
    <item>
      <title>First post!</title>
      <link>https://foodsdata.github.io/post/2015/01/05/first-post/</link>
      <pubDate>Mon, 05 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/post/2015/01/05/first-post/</guid>
      <description>This is my first post, how exciting!</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://foodsdata.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://foodsdata.github.io/posts/goisforlovers/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://foodsdata.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://foodsdata.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://foodsdata.github.io/welcome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/welcome/</guid>
      <description>Categories = [&amp;ldquo;Development&amp;rdquo;, &amp;ldquo;GoLang&amp;rdquo;] Description = &amp;ldquo;&amp;rdquo; Tags = [&amp;ldquo;Development&amp;rdquo;, &amp;ldquo;golang&amp;rdquo;] date = &amp;ldquo;2015-09-23T16:30:37+08:00&amp;rdquo; menu = &amp;ldquo;main&amp;rdquo; title = &amp;ldquo;你好，Hugo&amp;rdquo;</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://foodsdata.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://foodsdata.github.io/page/about/</guid>
      <description>My name is Inigo Montoya. I have the following qualities:
 I rock a great mustache I&amp;rsquo;m extremely loyal to my family  What else do you need?
my history To be honest, I&amp;rsquo;m having some trouble remembering right now, so why don&amp;rsquo;t you just watch my movie and it will answer all your questions.</description>
    </item>
    
  </channel>
</rss>